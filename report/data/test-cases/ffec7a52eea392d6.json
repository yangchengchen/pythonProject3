{
  "uid" : "ffec7a52eea392d6",
  "name" : "原霆科技后台管理",
  "fullName" : "ddt.yuanting_test.Test_Yuanting#test_comm",
  "historyId" : "05e1a9c6d79568ee17a7c0f41e6905ab",
  "time" : {
    "start" : 1675405935645,
    "stop" : 1675405936586,
    "duration" : 941
  },
  "description" : "原霆科技后台管理oa申请的用例",
  "descriptionHtml" : "<p>原霆科技后台管理oa申请的用例</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: a bytes-like object is required, not 'dict'",
  "statusTrace" : "self = <ddt.yuanting_test.Test_Yuanting object at 0x1033ef0d0>\nlistcases = {'cases': [{'data': {'name': 'ycc000的出差申请', 'processDefinitionKey': 'trip_2000'}, 'method': 'post', 'name': '出差申请', 'u...'method': 'post', 'name': '车辆维修申请', 'url': 'oa/process/start'}], 'description': '原霆科技后台管理oa申请的用例', 'title': '原霆科技后台管理'}\n\n    @allure.story('申请OA')\n    @pytest.mark.parametrize('listcases', workflow()['workflow'])\n    def test_comm(self,listcases):\n        allure.dynamic.title(listcases['title'])\n        allure.dynamic.description(listcases['description'])\n        testcases = listcases['cases']\n        #print(testcases)\n        for cases in testcases:\n            listcase = list(cases.values())\n            #print(listcase)\n            url=listcase[3]\n            datas=listcase[2]\n            with allure.step(listcase[0]):\n                ree=keys.post(url,datas)\n                ree=ree.json()\n>               allure.attach(body=ree,name='返回参数',attachment_type=allure.attachment_type.TEXT)\n\nddt/yuanting_test.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../Library/Python/3.8/lib/python/site-packages/allure_commons/_allure.py:200: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n../../Library/Python/3.8/lib/python/site-packages/pluggy/_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n../../Library/Python/3.8/lib/python/site-packages/pluggy/_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../Library/Python/3.8/lib/python/site-packages/allure_pytest/listener.py:229: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n../../Library/Python/3.8/lib/python/site-packages/allure_commons/reporter.py:165: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n../../Library/Python/3.8/lib/python/site-packages/pluggy/_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n../../Library/Python/3.8/lib/python/site-packages/pluggy/_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <allure_commons.logger.AllureFileLogger object at 0x103266730>\nbody = {'code': 0, 'data': {'ended': False, 'historyList': [], 'id': '92909', 'name': 'ycc000的出差申请', ...}, 'msg': '成功'}\nfile_name = '59ba69f7-ca09-49c7-affd-a6bab0b56a09-attachment.txt'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = os.path.join(self._report_dir, file_name)\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, text_type):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'dict'\n\n../../Library/Python/3.8/lib/python/site-packages/allure_commons/logger.py:62: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1675405935643,
      "stop" : 1675405935643,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1675405935644,
      "stop" : 1675405935644,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_xunit_setup_class_fixture_Test_Yuanting",
    "time" : {
      "start" : 1675405935644,
      "stop" : 1675405935644,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1675405935643,
      "stop" : 1675405935643,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1675405935643,
      "stop" : 1675405935644,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "原霆科技后台管理oa申请的用例",
    "status" : "broken",
    "statusMessage" : "TypeError: a bytes-like object is required, not 'dict'",
    "statusTrace" : "self = <ddt.yuanting_test.Test_Yuanting object at 0x1033ef0d0>\nlistcases = {'cases': [{'data': {'name': 'ycc000的出差申请', 'processDefinitionKey': 'trip_2000'}, 'method': 'post', 'name': '出差申请', 'u...'method': 'post', 'name': '车辆维修申请', 'url': 'oa/process/start'}], 'description': '原霆科技后台管理oa申请的用例', 'title': '原霆科技后台管理'}\n\n    @allure.story('申请OA')\n    @pytest.mark.parametrize('listcases', workflow()['workflow'])\n    def test_comm(self,listcases):\n        allure.dynamic.title(listcases['title'])\n        allure.dynamic.description(listcases['description'])\n        testcases = listcases['cases']\n        #print(testcases)\n        for cases in testcases:\n            listcase = list(cases.values())\n            #print(listcase)\n            url=listcase[3]\n            datas=listcase[2]\n            with allure.step(listcase[0]):\n                ree=keys.post(url,datas)\n                ree=ree.json()\n>               allure.attach(body=ree,name='返回参数',attachment_type=allure.attachment_type.TEXT)\n\nddt/yuanting_test.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../Library/Python/3.8/lib/python/site-packages/allure_commons/_allure.py:200: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n../../Library/Python/3.8/lib/python/site-packages/pluggy/_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n../../Library/Python/3.8/lib/python/site-packages/pluggy/_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n../../Library/Python/3.8/lib/python/site-packages/allure_pytest/listener.py:229: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n../../Library/Python/3.8/lib/python/site-packages/allure_commons/reporter.py:165: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n../../Library/Python/3.8/lib/python/site-packages/pluggy/_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n../../Library/Python/3.8/lib/python/site-packages/pluggy/_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <allure_commons.logger.AllureFileLogger object at 0x103266730>\nbody = {'code': 0, 'data': {'ended': False, 'historyList': [], 'id': '92909', 'name': 'ycc000的出差申请', ...}, 'msg': '成功'}\nfile_name = '59ba69f7-ca09-49c7-affd-a6bab0b56a09-attachment.txt'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = os.path.join(self._report_dir, file_name)\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, text_type):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'dict'\n\n../../Library/Python/3.8/lib/python/site-packages/allure_commons/logger.py:62: TypeError",
    "steps" : [ {
      "name" : "出差申请",
      "time" : {
        "start" : 1675405935645,
        "stop" : 1675405936573,
        "duration" : 928
      },
      "status" : "broken",
      "statusMessage" : "TypeError: a bytes-like object is required, not 'dict'\n",
      "statusTrace" : "  File \"/Users/a00/PycharmProjects/pythonProject3/ddt/yuanting_test.py\", line 28, in test_comm\n    allure.attach(body=ree,name='返回参数',attachment_type=allure.attachment_type.TEXT)\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/allure_commons/_allure.py\", line 200, in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/pluggy/_hooks.py\", line 265, in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/pluggy/_manager.py\", line 80, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/pluggy/_callers.py\", line 60, in _multicall\n    return outcome.get_result()\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/pluggy/_result.py\", line 60, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/allure_pytest/listener.py\", line 229, in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/allure_commons/reporter.py\", line 165, in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/pluggy/_hooks.py\", line 265, in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/pluggy/_manager.py\", line 80, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/pluggy/_callers.py\", line 60, in _multicall\n    return outcome.get_result()\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/pluggy/_result.py\", line 60, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/Users/a00/Library/Python/3.8/lib/python/site-packages/allure_commons/logger.py\", line 62, in report_attached_data\n    attached_file.write(body)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "c577618049bc9ec7",
        "name" : "返回参数",
        "source" : "c577618049bc9ec7.txt",
        "type" : "text/plain",
        "size" : 0
      } ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_class_fixture_Test_Yuanting::0",
    "time" : {
      "start" : 1675405936656,
      "stop" : 1675405936656,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "申请OA"
  }, {
    "name" : "parentSuite",
    "value" : "ddt"
  }, {
    "name" : "suite",
    "value" : "yuanting_test"
  }, {
    "name" : "subSuite",
    "value" : "Test_Yuanting"
  }, {
    "name" : "host",
    "value" : "00demacbook-pro"
  }, {
    "name" : "thread",
    "value" : "76148-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "ddt.yuanting_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "listcases",
    "value" : "{'title': '原霆科技后台管理', 'description': '原霆科技后台管理oa申请的用例', 'cases': [{'name': '出差申请', 'method': 'post', 'data': {'name': 'ycc000的出差申请', 'processDefinitionKey': 'trip_2000'}, 'url': 'oa/process/start'}, {'name': '请假申请', 'method': 'post', 'data': {'name': 'ycc000的请假申请', 'processDefinitionKey': 'leave_1000'}, 'url': 'oa/process/start'}, {'name': '资中收文申请', 'method': 'post', 'data': {'name': 'ycc000的资中收文', 'processDefinitionKey': 'zzdoc_6000'}, 'url': 'oa/process/start'}, {'name': '资中用车申请', 'method': 'post', 'data': {'name': 'ycc000的资中用车', 'processDefinitionKey': 'use_car_zz_3001'}, 'url': 'oa/process/start'}, {'name': '用车申请', 'method': 'post', 'data': {'name': 'ycc000的用车', 'processDefinitionKey': 'use_car_3000'}, 'url': 'oa/process/start'}, {'name': '车辆维修申请', 'method': 'post', 'data': {'name': 'ycc000的车辆维修', 'processDefinitionKey': 'maintenance_4000'}, 'url': 'oa/process/start'}]}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "ffec7a52eea392d6.json",
  "parameterValues" : [ "{'title': '原霆科技后台管理', 'description': '原霆科技后台管理oa申请的用例', 'cases': [{'name': '出差申请', 'method': 'post', 'data': {'name': 'ycc000的出差申请', 'processDefinitionKey': 'trip_2000'}, 'url': 'oa/process/start'}, {'name': '请假申请', 'method': 'post', 'data': {'name': 'ycc000的请假申请', 'processDefinitionKey': 'leave_1000'}, 'url': 'oa/process/start'}, {'name': '资中收文申请', 'method': 'post', 'data': {'name': 'ycc000的资中收文', 'processDefinitionKey': 'zzdoc_6000'}, 'url': 'oa/process/start'}, {'name': '资中用车申请', 'method': 'post', 'data': {'name': 'ycc000的资中用车', 'processDefinitionKey': 'use_car_zz_3001'}, 'url': 'oa/process/start'}, {'name': '用车申请', 'method': 'post', 'data': {'name': 'ycc000的用车', 'processDefinitionKey': 'use_car_3000'}, 'url': 'oa/process/start'}, {'name': '车辆维修申请', 'method': 'post', 'data': {'name': 'ycc000的车辆维修', 'processDefinitionKey': 'maintenance_4000'}, 'url': 'oa/process/start'}]}" ]
}